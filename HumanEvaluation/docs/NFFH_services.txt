CONTAINER NAME: User_Authentication
  MICROSERVICE: auth_service
    TYPE: backend
    DESCRIPTION: Handles user registration, login, and logout for clients, agricultural companies, and administrators. This service exposes endpoints for managing these operations and ensures secure credential handling. It validates credentials against stored data, generates authentication tokens for session management, and provides functions to maintain persistent login sessions.

CONTAINER NAME: Personal_Info
  MICROSERVICE: personal_info_backend
    TYPE: backend
    DESCRIPTION: This microservice handles the logic for fetching and updating user personal information. It interfaces with the database to retrieve the necessary data, ensuring that users can see their personal details, such as contact information, account settings, and preferences. It maintains user privacy and security by handling authentication and authorization checks before allowing access to personal data.
  MICROSERVICE: personal_info_storage
    TYPE: database
    DESCRIPTION: This microservice is responsible for storing and managing user personal data securely. It maintains records of contact details, account settings, and user preferences, allowing for efficient retrieval and updates as users interact with the platform.

CONTAINER NAME: Product_Discovery
  MICROSERVICE: product_display
    TYPE: backend
    DESCRIPTION: This microservice is responsible for fetching and displaying information about seasonal hot products and agricultural companies within the user's locality. It interfaces with the Inventory_Management service to retrieve the necessary data. It provides endpoints for clients to view seasonal offerings and companies in their area.

CONTAINER NAME: Cart_Management
  MICROSERVICE: cart-operations
    TYPE: backend
    DESCRIPTION: This microservice manages product operations within the user's shopping cart. It handles adding products to the cart, removing them, and providing a list of current cart items. It communicates with the database to keep track of products associated with a user session and updates as needed across different interactions.
  MICROSERVICE: cart-storage
    TYPE: database
    DESCRIPTION: This microservice is responsible for storing the contents of each client's shopping cart. It manages data such as product identifiers, quantities, and timestamps, linking these to user sessions for persistence and retrieval during the user's interactions with their cart.

CONTAINER NAME: Order_Processing
  MICROSERVICE: order-completion
    TYPE: backend
    DESCRIPTION: This microservice handles the process of finalizing client orders. It enables clients to select a pickup date and confirms the completion of the order. It also updates order statuses and communicates with the Cart_Management and Inventory_Management containers to ensure product availability before order finalization.
  MICROSERVICE: client-order-history
    TYPE: backend
    DESCRIPTION: This microservice allows clients to view all their past and current orders. It fetches order history data from the storage, providing a comprehensive overview for clients to manage and reference their orders.
  MICROSERVICE: farmer-order-management
    TYPE: backend
    DESCRIPTION: This microservice enables farmers to see and review all orders they need to fulfill. It provides detailed information about each order, helping farmers to organize and prepare for order pickups.
  MICROSERVICE: order-storage
    TYPE: database
    DESCRIPTION: This microservice is responsible for storing order-related data. It retains details such as order ID, client ID, farmer ID, list of products ordered, order status, and the selected pickup date, facilitating retrieval and management of order information.

CONTAINER NAME: Location_Services
  MICROSERVICE: google_maps_integration
    TYPE: middleware
    DESCRIPTION: The microservice handles the integration with Google Maps to provide navigation capabilities. It processes requests from clients to fetch directions to Agricultural Companies and redirects them to Google Maps with the necessary parameters. This microservice does not store any data persistently, as its main focus is to serve as a bridge between the platform and Google Maps.

CONTAINER NAME: Inventory_Management
  MICROSERVICE: inventory-backend
    TYPE: backend
    DESCRIPTION: This microservice is responsible for executing CRUD operations (Create, Read, Update, Delete) on the agricultural products managed by the companies. It enables adding new products, removing unavailable ones, and modifying existing items' details, such as price and quantity, thereby ensuring accurate and updated inventory data.
  MICROSERVICE: inventory-db
    TYPE: database
    DESCRIPTION: This microservice stores all inventory-related data, including product details such as name, description, price, quantity, and associated images or categories. It supports the persistence needs of the Inventory_Management container by maintaining accurate records of currently available products and historical data pertaining to inventory changes.

CONTAINER NAME: Admin_Management
  MICROSERVICE: admin-backend
    TYPE: backend
    DESCRIPTION: This microservice facilitates administrative functionalities such as managing users, orders, areas, and products. It provides endpoints for viewing, deleting, modifying user information, analyzing order details, organizing Agricultural Companies by regions, and maintaining product listings. This ensures effective platform security, performance evaluation, and site maintenance.
  MICROSERVICE: admin-database
    TYPE: database
    DESCRIPTION: This microservice is responsible for storing a variety of data such as user information, order records, geographic areas, Agricultural Company details, and product data. It ensures data persistence for administrative actions, allowing for efficient retrieval, modification, and deletion tasks.
  MICROSERVICE: admin-middleware
    TYPE: middleware
    DESCRIPTION: This microservice manages data communication between the Admin_Management backend and other internal containers like User_Authentication and Inventory_Management. It handles messaging and data exchange to streamline administrative operations and ensure smooth inter-service communication.

CONTAINER NAME: Frontend
  MICROSERVICE: frontend_ui
    TYPE: frontend
    DESCRIPTION: This microservice is responsible for the presentation layer of the platform. It provides the user interface that allows consumers, farmers, and administrators to interact with the system. It handles rendering of pages for user registration, login, product management, cart handling, and order processing. It communicates with backend services to fetch data and display it to the users in a coherent and user-friendly manner.

