CONTAINER NAME: user_authentication
The user_authentication container is responsible for managing all user-related authentication processes within the Teamify application. Its core functions include account creation, which allows users to register and gain access to the system. Additionally, it handles user login, providing a gateway for users to access their personal accounts and utilize the application's features. Logout functionality ensures users can securely end their sessions, minimizing the risk of unauthorized access. The container also supports password reset capabilities, enabling users to recover access to their accounts if they forget their passwords. Finally, it allows users to delete their accounts, ensuring that users can control their personal data and remove it from the system as desired. This container is crucial for establishing user identity and maintaining security across the Teamify platform, making sure that all interactions and access points are adequately authenticated and authorized.

CONTAINER NAME: user_profile
The user_profile container is responsible for managing the visualization and modification of user profile information in the Teamify application. Its main purpose is to allow users to access and update their personal information related to their profiles. The container serves two primary user stories: first, enabling users to view their personal information to ensure its accuracy, and second, allowing users to modify this information as needed. This can include updates to personal details, such as passwords or any incorrect information. By handling these user interactions, the user_profile container ensures that individuals can maintain accurate and up-to-date information within the system, thus enhancing their overall user experience.

CONTAINER NAME: notifications
The "notifications" container is responsible for managing and delivering real-time notifications to users within the Teamify application. It serves the crucial purpose of ensuring users receive timely updates about events, tasks, messages, or any other relevant activities that occur within the application. This container plays a key role in enhancing user engagement by making sure users are instantly informed of any changes or actions they need to be aware of. The user story associated with this container highlights the user's need to access a dedicated section where all their notifications are aggregated and can be easily viewed. By providing this functionality, the notifications container helps users stay organized and responsive, ultimately contributing to the efficiency and effectiveness promised by Teamify's collaborative environment.

CONTAINER NAME: personal_tasks
The "personal_tasks" container is dedicated to managing individual task-related functionalities in the Teamify application. It enables users to efficiently organize and oversee their personal agendas by providing the ability to create, view, modify, delete, and mark tasks as complete. This container supports the user's need to have a clear and accessible list of personal tasks, helping them manage their time and responsibilities effectively. Through its operations, users can create new tasks to better organize their personal life, adjust previously defined tasks to correct any details, remove tasks to free up time slots, and mark tasks as completed to keep track of progress. This container encapsulates all necessary backend processes related to personal task management, allowing for a seamless and user-friendly experience when dealing with personal tasks within the application.

CONTAINER NAME: team_management
The team_management container is designed to facilitate team-oriented functionalities within the Teamify application. This container handles the creation and management of teams, including inviting members to join teams, listing all teams a user is part of, and allowing team members to leave teams. It also provides functionality for team administrators to manage team roles, including assigning or revoking administrator privileges to other team members, and editing team information. Additionally, the team_management container allows administrators to delete teams that are no longer needed. Essentially, this container serves as the core of the application's team collaboration feature, enabling efficient team management and collaboration. This container operates on ports 10400 through 10499.

CONTAINER NAME: team_events
The team_events container is designed to manage events within teams. Its primary responsibilities include the creation, modification, deletion, and completion tracking of team events. This container facilitates the shared agenda functionality, allowing team members to visualize events specific to their team. As various team roles participate, it handles input from administrators for event management tasks such as creating new events, modifying existing ones, ensuring they align with team needs, and marking events as complete. Furthermore, it supports decision-making around event participation by enabling users to accept or decline event invitations, thereby communicating their attendance to team administrators. Overall, the team_events container plays a crucial role in organizing and streamlining team schedules, ensuring effective coordination and collaboration within teams on the platform.

CONTAINER NAME: messaging
The messaging container is dedicated to facilitating real-time chat functionalities within teams. Its primary function is to enable seamless communication among team members through a group chat interface. By addressing the user story, "As a team member, I want to send messages in a group chat, so that I can easily communicate with all the other team members," this container ensures that users can send and receive messages instantly, enhancing team collaboration and communication. The messaging service might employ technologies such as WebSockets or real-time messaging protocols to provide an interactive and responsive chat experience for users. It efficiently manages the delivery, storage, and routing of messages among the team members, making it an essential component for promoting effective and immediate team interaction within the Teamify application.

CONTAINER NAME: polls
The polls container in Teamify is specifically designed to manage and facilitate polling functionalities within teams. This container allows team administrators to create polls aimed at gathering opinions or making decisions on specific topics pertinent to the team. It supports the complete lifecycle of a poll, including creation by the team administrator, participation by team members, and the visualization of poll results. Team members can cast their votes to express their opinions, and subsequently review the results once the poll is closed or voting is complete. This encourages collaborative decision-making and helps ensure that all team members' voices are heard. The container operates on ports 10700 through 10799, providing an isolated and secure environment for handling polling operations separate from other functionalities in the Teamify ecosystem.

CONTAINER NAME: frontend
The frontend container is responsible for managing and displaying the user interface of the Teamify software solution. It serves as the interface through which users interact with all components of the system, including personal task management, team collaboration, real-time chat, notifications, and more. This container ensures that the user experience is intuitive and seamless, providing access to various functionalities such as creating and managing tasks, viewing and editing user profiles, receiving notifications, engaging in team chats, and participating in polls. The frontend container makes these interactions possible by connecting and orchestrating requests between the user's browser and the appropriate backend microservices, while also rendering the visual elements necessary for effective user engagement.

