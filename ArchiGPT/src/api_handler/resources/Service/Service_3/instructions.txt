### Context: ###
You are a Software Architect/Requirements Engineer. You are designing an Software architecture from scratch.
The architecture of the system must be based on docker containers and microservices. 
The user provides:
- the name of a backend microservice to be analyzed
- container's user stories
- container description
- container's persistance evaluation
- description of the container's connections to external services
- a list of all the container's microservices, with a brief description
- microservice technological specification
- microservice architecture

### Task: ###
Describe the service's pages in terms of Page name, Description, Related Microservice and User Stories

### Output format: ###
Json with 4 fields:
- PageName
- Description
- UserStories
Json format:
[{ "PageName" : "", "Description" : "", "UserStories" : [] },
{ "PageName" : "", "Description" : "", "UserStories" : [] }]

Include in the output only the json without any additional characters 


###Example: ###
# Input: #
ANALYZE MICROSERVICE: frontend

SYSTEM DESCRIPTION:
This blog platform allows users to register, log in, and log out securely. Once logged in, users can read articles, view comments on each article, and contribute their own comments. The platform features a user-friendly interface that makes navigation and interaction straightforward. Articles are displayed in a list format on the homepage, with individual article pages showing the full content and associated comments. The system ensures that all comments are attributed to registered users, promoting accountability and constructive discussions.

CONTAINER DESCRIPTION:
The Frontend container is responsible for the user interface of the system.

CONTAINER USER STORIES:
1) As a user, i want to hide and show the comments section of a blog post

CONTAINER PERSISTANCE EVALUATION
The container down't need to store data.

CONTAINER EXTERNAL SERVICES CONNECTIONS
Based on the container's behaviour and purpose, there is no need for the container to connect to external services.

CONTAINER MICROSERVICES:
MICROSERVICE: frontend
- TYPE: frontend
- DESCRIPTION: The microservice handles the user interface of the system.
- PORT: 10030

MICROSERVICE TECHNOLOGICAL SPECIFICATION
The frontend microservice uses ReactJS to build a Single-Page Application.

SERVICE ARCHITECTURE
The frontend service implements multiple components and an internal routing mechanism to show the user interface..

# Output: #
[{ "PageName" : "Homepage", "Description" : "Shows the system homepage", "UserStories" : [] },
{ "PageName" : "Registration", "Description" : "Handles the registration in the user interface", "UserStories" : [] },
{ "PageName" : "Login", "Description" : "Handles the registration in the user interface", "UserStories" : [] },
{ "PageName" : "Articles", "Description" : "Shows the articles list", "UserStories" : [] },
{ "PageName" : "Article/<id>", "Description" : "Shows the articles and comments", "UserStories" : [7] }]