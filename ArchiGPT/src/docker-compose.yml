services:

  backend:
    container_name: backend
    build: ./backend
    ports:
      - "5001:5001"
    volumes:
      - ./backend:/backend
    environment:
      - MONGODB_URL=mongodb://mongodb:27017
    depends_on:
      - mongodb
    networks:
      - main-network

  metric-handler:
    container_name: metric-handler
    build: ./metric_handler
    ports:
      - "5003:5003"
    volumes:
      - ./metric_handler:/metric_handler
    depends_on:
      - backend
    networks:
      - main-network

  api-handler:
    container_name: api-handler
    build: ./api_handler
    ports:
      - "10001:10001"
    volumes:
      - ./api_handler:/api_handler
    depends_on:
      - backend
    networks:
      - main-network

  frontend:
    container_name: frontend
    build: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/frontend
    environment:
      - WATCHPACK_POLLING=true
    depends_on:
      - mongodb
    networks:
      - main-network

  mongodb:
    container_name: mongodb
    image: mongo:latest
    ports:
      - '27017:27017'
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user
      - MONGO_INITDB_ROOT_PASSWORD=pass
    volumes:
      - ./mongo-volume:/var/lib/data/db
    networks:
      - main-network

  mongo-express:
    container_name: express
    image: mongo-express:latest
    restart: always
    depends_on:
      - mongodb
    ports:
      - 9300:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: user
      ME_CONFIG_MONGODB_ADMINPASSWORD: pass
      ME_CONFIG_MONGODB_SERVER: mongodb
      ME_CONFIG_MONGODB_PORT: "27017"
    networks:
      - main-network

networks:
  main-network:
    driver: bridge
